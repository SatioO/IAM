// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "email": "vaibhav.satam29991@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client": {
            "get": {
                "description": "This operation is to get list of clients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "List of clients",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ListClientsDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This operation is to create new client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Creates Client",
                "parameters": [
                    {
                        "description": "client data",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateClientDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/client/{clientId}": {
            "get": {
                "description": "This operation is to get details of the client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Get details of client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "client identifier",
                        "name": "clientId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetClientDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "This operation is to update new client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Update client",
                "parameters": [
                    {
                        "description": "client data",
                        "name": "client",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateClientDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "client identifier",
                        "name": "clientId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This operation is to delete client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "Delete Client",
                "parameters": [
                    {
                        "type": "string",
                        "description": "client identifier",
                        "name": "clientId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/realm": {
            "get": {
                "description": "This operation is to get list of realms",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realm"
                ],
                "summary": "List of realms",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ListRealmDTO"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "This operation is to create new realm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realm"
                ],
                "summary": "Create Realm",
                "parameters": [
                    {
                        "description": "realm data",
                        "name": "realm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateRealmDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/realm/{realmId}": {
            "get": {
                "description": "This operation is to get details of the realm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realm"
                ],
                "summary": "Get details of realm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "realm identifier",
                        "name": "realmId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.GetRealmDTO"
                        }
                    }
                }
            },
            "put": {
                "description": "This operation is to update new realm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realm"
                ],
                "summary": "Update Realm",
                "parameters": [
                    {
                        "description": "realm data",
                        "name": "realm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateRealmDTO"
                        }
                    },
                    {
                        "type": "string",
                        "description": "realm identifier",
                        "name": "realmId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "This operation is to delete realm",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Realm"
                ],
                "summary": "Delete Realm",
                "parameters": [
                    {
                        "type": "string",
                        "description": "realm identifier",
                        "name": "realmId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.CreateClientDTO": {
            "type": "object",
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direct_access_grant_enabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "implicit_flow_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "public_client": {
                    "type": "boolean"
                },
                "redirect_uris": {
                    "type": "string"
                },
                "root_url": {
                    "type": "string"
                },
                "service_account_enabled": {
                    "type": "boolean"
                },
                "standard_flow_enabled": {
                    "type": "boolean"
                }
            }
        },
        "dtos.CreateRealmDTO": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "display_name": {
                    "type": "string"
                },
                "duplicate_email_allowed": {
                    "type": "boolean"
                },
                "duplicate_phone_allowed": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "register_email_as_username": {
                    "type": "boolean"
                },
                "register_phone_as_username": {
                    "type": "boolean"
                },
                "support_email": {
                    "type": "string"
                },
                "support_url": {
                    "type": "string"
                }
            }
        },
        "dtos.GetClientDTO": {
            "type": "object",
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direct_access_grant_enabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "implicit_flow_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "public_client": {
                    "type": "boolean"
                },
                "redirect_uris": {
                    "type": "string"
                },
                "root_url": {
                    "type": "string"
                },
                "service_account_enabled": {
                    "type": "boolean"
                },
                "standard_flow_enabled": {
                    "type": "boolean"
                }
            }
        },
        "dtos.GetRealmDTO": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "display_name": {
                    "type": "string"
                },
                "duplicate_email_allowed": {
                    "type": "boolean"
                },
                "duplicate_phone_allowed": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "register_email_as_username": {
                    "type": "boolean"
                },
                "register_phone_as_username": {
                    "type": "boolean"
                },
                "support_email": {
                    "type": "string"
                },
                "support_url": {
                    "type": "string"
                }
            }
        },
        "dtos.ListClientsDTO": {
            "type": "object",
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direct_access_grant_enabled": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "implicit_flow_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "public_client": {
                    "type": "boolean"
                },
                "redirect_uris": {
                    "type": "string"
                },
                "root_url": {
                    "type": "string"
                },
                "service_account_enabled": {
                    "type": "boolean"
                },
                "standard_flow_enabled": {
                    "type": "boolean"
                }
            }
        },
        "dtos.ListRealmDTO": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "display_name": {
                    "type": "string"
                },
                "duplicate_email_allowed": {
                    "type": "boolean"
                },
                "duplicate_phone_allowed": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "register_email_as_username": {
                    "type": "boolean"
                },
                "register_phone_as_username": {
                    "type": "boolean"
                },
                "support_email": {
                    "type": "string"
                },
                "support_url": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateClientDTO": {
            "type": "object",
            "properties": {
                "base_url": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "direct_access_grant_enabled": {
                    "type": "boolean"
                },
                "implicit_flow_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "public_client": {
                    "type": "boolean"
                },
                "redirect_uris": {
                    "type": "string"
                },
                "root_url": {
                    "type": "string"
                },
                "service_account_enabled": {
                    "type": "boolean"
                },
                "standard_flow_enabled": {
                    "type": "boolean"
                }
            }
        },
        "dtos.UpdateRealmDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "duplicate_email_allowed": {
                    "type": "boolean"
                },
                "duplicate_phone_allowed": {
                    "type": "boolean"
                },
                "enabled": {
                    "type": "boolean"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "register_email_as_username": {
                    "type": "boolean"
                },
                "register_phone_as_username": {
                    "type": "boolean"
                },
                "support_email": {
                    "type": "string"
                },
                "support_url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Identity Management Server",
	Description:      "These apis are built to handle identity management.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

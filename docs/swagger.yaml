definitions:
  dtos.CreateClientDTO:
    properties:
      base_url:
        type: string
      client_id:
        type: string
      description:
        type: string
      direct_access_grant_enabled:
        type: boolean
      enabled:
        type: boolean
      implicit_flow_enabled:
        type: boolean
      protocol:
        type: string
      public_client:
        type: boolean
      realm_id:
        type: string
      redirect_uris:
        type: string
      root_url:
        type: string
      service_account_enabled:
        type: boolean
      standard_flow_enabled:
        type: boolean
    type: object
  dtos.CreateRealmDTO:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      display_name:
        type: string
      duplicate_email_allowed:
        type: boolean
      duplicate_phone_allowed:
        type: boolean
      enabled:
        type: boolean
      logo:
        type: string
      name:
        type: string
      register_email_as_username:
        type: boolean
      register_phone_as_username:
        type: boolean
      support_email:
        type: string
      support_url:
        type: string
    type: object
  dtos.GetClientDTO:
    properties:
      base_url:
        type: string
      client_id:
        type: string
      description:
        type: string
      direct_access_grant_enabled:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      implicit_flow_enabled:
        type: boolean
      protocol:
        type: string
      public_client:
        type: boolean
      redirect_uris:
        type: string
      root_url:
        type: string
      service_account_enabled:
        type: boolean
      standard_flow_enabled:
        type: boolean
    type: object
  dtos.GetRealmDTO:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      display_name:
        type: string
      duplicate_email_allowed:
        type: boolean
      duplicate_phone_allowed:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      register_email_as_username:
        type: boolean
      register_phone_as_username:
        type: boolean
      support_email:
        type: string
      support_url:
        type: string
    type: object
  dtos.ListClientsDTO:
    properties:
      base_url:
        type: string
      client_id:
        type: string
      description:
        type: string
      direct_access_grant_enabled:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      implicit_flow_enabled:
        type: boolean
      name:
        type: string
      protocol:
        type: string
      public_client:
        type: boolean
      redirect_uris:
        type: string
      root_url:
        type: string
      service_account_enabled:
        type: boolean
      standard_flow_enabled:
        type: boolean
    type: object
  dtos.ListRealmDTO:
    properties:
      attributes:
        additionalProperties:
          type: string
        type: object
      display_name:
        type: string
      duplicate_email_allowed:
        type: boolean
      duplicate_phone_allowed:
        type: boolean
      enabled:
        type: boolean
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      register_email_as_username:
        type: boolean
      register_phone_as_username:
        type: boolean
      support_email:
        type: string
      support_url:
        type: string
    type: object
  dtos.UpdateClientDTO:
    properties:
      base_url:
        type: string
      client_id:
        type: string
      description:
        type: string
      direct_access_grant_enabled:
        type: boolean
      implicit_flow_enabled:
        type: boolean
      protocol:
        type: string
      public_client:
        type: boolean
      redirect_uris:
        type: string
      root_url:
        type: string
      service_account_enabled:
        type: boolean
      standard_flow_enabled:
        type: boolean
    type: object
  dtos.UpdateRealmDTO:
    properties:
      display_name:
        type: string
      duplicate_email_allowed:
        type: boolean
      duplicate_phone_allowed:
        type: boolean
      enabled:
        type: boolean
      logo:
        type: string
      name:
        type: string
      register_email_as_username:
        type: boolean
      register_phone_as_username:
        type: boolean
      support_email:
        type: string
      support_url:
        type: string
    type: object
info:
  contact:
    email: vaibhav.satam29991@gmail.com
  description: These apis are built to handle identity management.
  title: Identity Management Server
  version: "1.0"
paths:
  /client:
    get:
      consumes:
      - application/json
      description: This operation is to get list of clients
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ListClientsDTO'
            type: array
      summary: List of clients
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: This operation is to create new client
      parameters:
      - description: client data
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateClientDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Creates Client
      tags:
      - Client
  /client/{clientId}:
    delete:
      consumes:
      - application/json
      description: This operation is to delete client
      parameters:
      - description: client identifier
        in: query
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: Delete Client
      tags:
      - Client
    get:
      consumes:
      - application/json
      description: This operation is to get details of the client
      parameters:
      - description: client identifier
        in: path
        name: clientId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.GetClientDTO'
      summary: Get details of client
      tags:
      - Client
    put:
      consumes:
      - application/json
      description: This operation is to update new client
      parameters:
      - description: client data
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateClientDTO'
      - description: client identifier
        in: query
        name: clientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update client
      tags:
      - Client
  /realm:
    get:
      consumes:
      - application/json
      description: This operation is to get list of realms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ListRealmDTO'
            type: array
      summary: List of realms
      tags:
      - Realm
    post:
      consumes:
      - application/json
      description: This operation is to create new realm
      parameters:
      - description: realm data
        in: body
        name: realm
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateRealmDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Create Realm
      tags:
      - Realm
  /realm/{realmId}:
    delete:
      consumes:
      - application/json
      description: This operation is to delete realm
      parameters:
      - description: realm identifier
        in: query
        name: realmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
      summary: Delete Realm
      tags:
      - Realm
    get:
      consumes:
      - application/json
      description: This operation is to get details of the realm
      parameters:
      - description: realm identifier
        in: path
        name: realmId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.GetRealmDTO'
      summary: Get details of realm
      tags:
      - Realm
    put:
      consumes:
      - application/json
      description: This operation is to update new realm
      parameters:
      - description: realm data
        in: body
        name: realm
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateRealmDTO'
      - description: realm identifier
        in: query
        name: realmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update Realm
      tags:
      - Realm
swagger: "2.0"
